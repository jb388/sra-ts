# coord_cartesian(xlim = c(30, 85), ylim = c(30, 85)) +
facet_grid(rows = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
# coord_cartesian(xlim = c(30, 85), ylim = c(30, 85)) +
facet_grid(rows = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
range(dens.blk.inc.min$d14c_inc)
stem(dens.blk.inc.min$d14c_inc)
stem(dens.blk.inc.min$fPOM)
stem(dens.blk.inc.min$d14c_inc)
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
facet_grid(rows = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
coord_fixed() +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_inc_u, xmin = d14c_inc_l), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
coord_fixed() +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
names(dens.blk.inc.min)
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
coord_fixed() +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_fixed() +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_fixed() +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank())
help("coord_cartesian")
# plot inc v LF
# plot profiles by year and fraction type
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, fPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 105), ylim = c(-120, 105)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
range(dens.blk.inc.min$oPOM)
range(dens.blk.inc.min$oPOM, na.rm = T)
# oPOM
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, oPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-150, 105), ylim = c(-120, 105)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
range(dens.blk.inc.min$d14c_u_inc)
# oPOM
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, oPOM, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-150, 110), ylim = c(-120, 110)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
# minC
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, minC, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-150, 110), ylim = c(-120, 110)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
range(dens.blk.inc.min$minC, na.rm = T)
# minC
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, minC, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-120, 110), ylim = c(-120, 110)) +
facet_grid(cols = vars(lyr_bot)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
# long df
dens.blk.inc.min <- merge(
sra.all.min,
dens.df[ , c("pm", "eco", "ECO","year", "lyr_bot", "frc_14c")])
dens.blk.inc.min.w <- merge(
sra.all.min,
dens.df.w[ , c("pm", "eco", "ECO","year", "lyr_bot", "fPOM", "oPOM", "minC")])
# all frc, 2019
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, frc_14c, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-150, 110), ylim = c(-120, 110)) +
facet_grid(cols = vars(lyr_bot),
rows = vars(frc)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
str(dens.blk.inc.min)
# long df
dens.blk.inc.min <- merge(
sra.all.min,
dens.df[ , c("pm", "eco", "ECO","year", "lyr_bot", "frc", "frc_14c")])
# all frc, 2019
dens.blk.inc.min %>%
filter(year == "2019") %>%
filter(d14c_inc > -70) %>%
# filter(lyr_bot == 10) %>%
ggplot(., aes(d14c_inc, frc_14c, color = pm, shape = eco)) +
geom_vline(xintercept = 0, color = "lightgray") +
geom_hline(yintercept = 0, color = "lightgray") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3) +
geom_errorbarh(aes(xmax = d14c_u_inc, xmin = d14c_l_inc), height = 1) +
scale_color_manual(name = "Parent material",
values = c("andesite" = andesite,
"basalt" = basalt,
"granite" = granite)) +
scale_shape_manual(name = "Climate",
values = c("warm" = 15,
"cool" = 17,
"cold" = 16)) +
coord_cartesian(xlim = c(-150, 110), ylim = c(-120, 110)) +
facet_grid(cols = vars(lyr_bot),
rows = vars(frc)) +
theme_bw() +
theme(panel.grid = element_blank(),
aspect.ratio = 1)
# plot
ggplot(HF_tml.df, aes(temp, CO2_scaled, color = PM)) +
# geom_vline(xintercept = 250, color = "red", linetype = "dashed") +
# geom_vline(xintercept = 370, color = "red", linetype = "dashed") +
# geom_vline(xintercept = 370, color = "red", linetype = "dashed") +
# geom_vline(xintercept = 500, color = "red", linetype = "dashed") +
geom_line() +
scale_color_manual(values = c("AN" = andesite,
"GR" = granite)) +
theme_bw() +
theme(panel.grid.minor = element_blank())
## 2001 summary data
soc.2001 <- data.frame(read_excel("../data/external/sra_ras_sum/sierra_data_summary_2020.xlsx",
sheet = "2001_bulk_data"))
# create list; remove BS samples deeper than 30 cm
soc.2001.ls <- lapply(split(soc.2001, soc.2001$PMeco), function(df) {
df <- type.convert(df[complete.cases(df), c("ID", "C.", "mass_kgm2", "PMeco", "pro_rep", "lyr_top", "lyr_bot")])
return(df[which(df$lyr_bot < 36), ])
})
View(soc.2001.sum)
soc.2001.ls$ANpp
# calculate SOC stocks
soc.2001.ls <- lapply(soc.2001.ls, function(df) {
df$lyr_soc_kgm2 <- df$C. * df$mass_kgm2 * 10^-2
return(df)
})
# summarize [note that soc stocks are dropped]
soc.2001.sum <- data.frame(bind_rows(lapply(soc.2001.ls, function(df) {
df %>%
mutate(ID2 = paste0(PMeco, "_", lyr_top, "-", lyr_bot)) %>%
group_by(ID2, PMeco, lyr_top, lyr_bot) %>%
summarize(c_pct_avg = mean(C.))
})))
View(soc.2001.sum)
soc.2001.ls$ANpp
soc.2001.sum
soc.2001.ls$BSrf
sra.2001.ls$ANpp
sra.2001.ls$ANwf
sra.2001.ls$ANpp
sra.2001.ls$ANrf
sra.09.sum
View(sra.09.sum)
names(sra.2009.ls$ANpp)
# summarize 09 data
sra.09.sum <- ras18.sum %>%
mutate(eco = factor(ifelse(ECO == "pp", "warm",
ifelse(ECO == "wf", "cool", "cold")),
levels = c("warm", "cool", "cold")),
pm = paste0(tolower(substr(Parent_Material, 1, 1)),
substr(Parent_Material, 2, nchar(Parent_Material))),
mass_kgm2 = BD_g_cm_3 * Soil_finefraction * (`bottom mineral` - `top mineral`) * 10) %>%
rename(d14c = "Δ14C",
lyr_bot = "bottom mineral",
lyr_top = "top mineral")
sra.2009.ls <- lapply(split(sra.09.sum, sra.09.sum$PMeco), function(df) {
df$lyr_fraction_modern <- calc_fm(df$d14c, 2009)
return(data.frame(df))
})
sra.09.sum %>%
ggplot(., aes(d14c, lyr_bot, color = pm, shape = eco, group = PMeco)) +
geom_vline(xintercept = atm.d14.2009) +
geom_hline(yintercept = 0) +
geom_point(size = 3) +
geom_path(linetype = "dashed") +
scale_y_reverse() +
scale_x_continuous(limits = c(-100, 180)) +
scale_color_manual(name = "parent material",
values = c("andesite" = "blue",
"basalt" = "red",
"granite" = "darkgray")) +
scale_shape_manual(name = "ecosystem",
values = c("warm" = 0,
"cool" = 1,
"cold" = 2)) +
xlab(expression(Delta*''^14*'C (‰)')) +
ylab("Depth (cm)") +
facet_grid(rows = vars(eco), cols = vars(pm)) +
theme_bw() +
theme(panel.grid.minor = element_blank())
# Need SOC stock data for 2019 samples: use mass data from 2009 samples
# spline fit for bulk density
sra.2009.mass.sp <- lapply(sra.2009.ls, function(x) {
x$mass_cmtv <- NA
for(i in seq_along(x$lyr_bot)) {
if(i == 1) {
x$mass_cmtv[i] <- x$mass_kgm2[i]
} else {
x$mass_cmtv[i] <- x$mass_kgm2[i] + x$mass_cmtv[i-1]
}
}
depths(x) <- pro_name ~ lyr_top + lyr_bot
x.mps <- mpspline(x, var.name = "mass_cmtv")
x.mps$var.1cm <- x.mps$var.1cm[1:100]
return(x.mps)
})
# remove NA values
sra.2009.mass.sp <- lapply(sra.2009.mass.sp, function(ls) {
df <- data.frame(ls["var.1cm"])
ix <- which(is.na(df$var.1cm))
df$var.1cm[ix] <- df$var.1cm[ix[1]-1]
return(df)
})
# calculate mean of 1cm BD predictions for each 2019 depth increment
mass_pred <- lapply(seq_along(sra.2009.mass.sp), function(i) {
ls <- split(sra.2019.ls[[i]], sra.2019.ls[[i]]["pro_rep"]) # split each replicate profile
ls <- lapply(seq_along(ls), function(df) {
d <- ls[[df]][["lyr_bot"]] # depth intervals
c <- vector(mode = "list", length = length(d)) # vector for averaging 1 cm bd pred
for(j in seq_along(d)) {
if(j == 1) {
c[[j]] <- mean(sra.2009.mass.sp[[i]][1:d[j], "var.1cm"]) # 1-10
} else {
c[[j]] <- mean(sra.2009.mass.sp[[i]][(d[j-1]+1):d[j], "var.1cm"]) # 10 cm increments
}
}
return(unlist(c))
})
return(unsplit(ls, sra.2019.ls[[i]]["pro_rep"]))
})
# merge predicted mass values with sra.2019.ls
nms <- names(sra.2019.ls)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
